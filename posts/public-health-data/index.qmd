---
title: "Public Health Data"
author: "Simon Grimm "
date: 2024-03-12
toc: true
# show no code warnings
nocode: true
format:
  html:
    code-fold: true
jupyter: venv
#filters:
#    - black-formatter
cap-location: bottom
---


## MADPH

```{python}
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
df_adeno = pd.read_csv('data/2024-02-27 NREVSS data request MA June-Dec 2023 - Respiratory Adenovirus.tsv', sep='\t')
df_parainfluenza = pd.read_csv('data/2024-02-27 NREVSS data request MA June-Dec 2023 - Human Parainfluenza.tsv', sep='\t')
df_rhino = pd.read_csv('data/2024-02-27 NREVSS data request MA June-Dec 2023 - Rhinovirus.tsv', sep='\t')
df_covid = pd.read_csv('data/covid-19-dashboard-03-07-24/County data-Table 1.tsv', sep='\t')
df_flu = pd.read_csv('data/flu-dashboard-data-03-07-24/Influenza Lab Tests Reported-Table 1.tsv', sep='\t')
```
### COVID-19

```{python}


```
## CDC NREVSS
### Adenovirus

```{python}
#| warning: false
df = df_adeno[df_adeno['TestType'] == 4]
df['percent_positive'] = df['RAdenopos'] / df['RAdenotest'] * 100
df['RepWeekDate'] = pd.to_datetime(df['RepWeekDate'], dayfirst=True)
fig, ax1 = plt.subplots(figsize=(8,6))
ax1.set_xlabel('Months (2023-2024)')
ax1.set_ylabel('% Positive Tests', color='tab:blue')
ax1.plot(df['RepWeekDate'], df['percent_positive'], color='tab:blue')
ax1.tick_params(axis='y', labelcolor='tab:blue')

ax2 = ax1.twinx() 
color = 'tab:red'
ax2.set_ylabel('# Positive Tests', color=color)
ax2.plot(df['RepWeekDate'], df['RAdenopos'], color=color)
ax2.tick_params(axis='y', labelcolor=color)

# make x axis show months only by turning dates into month strings
ax1.xaxis.set_major_locator(mdates.MonthLocator())
ax1.xaxis.set_major_formatter(mdates.DateFormatter('%b'))


fig.tight_layout()

plt.show()
```

### Parainfluenza

```{python}
#| warning: false
df = df_parainfluenza[df_parainfluenza['TestType'] == 4]
df["PIVpos"] = df["PIV1pos"] + df["PIV2pos"] + df["PIV3pos"] + df["PIV4pos"]
df['percent_positive'] = df['PIVpos'] / df['PIVtest'] * 100
df['RepWeekDate'] = pd.to_datetime(df['RepWeekDate'], dayfirst=True)


fig, ax1 = plt.subplots(figsize=(8,6))
ax1.set_xlabel('Months (2023-2024)')
ax1.set_ylabel('% Positive Tests', color='tab:blue')
ax1.plot(df['RepWeekDate'], df['percent_positive'], color='tab:blue')
ax1.tick_params(axis='y', labelcolor='tab:blue')

ax2 = ax1.twinx() 
color = 'tab:red'
ax2.set_ylabel('# Positive Tests', color=color)
ax2.plot(df['RepWeekDate'], df['PIVpos'], color=color)
ax2.tick_params(axis='y', labelcolor=color)

# make x axis show months only by turning dates into month strings
ax1.xaxis.set_major_locator(mdates.MonthLocator())
ax1.xaxis.set_major_formatter(mdates.DateFormatter('%b'))


fig.tight_layout()

```


### Rhinovirus

```{python}
#| warning: false

# Assuming your dataframe is named df_rhino
df_rhino['percent_positive'] = df_rhino['Rhinopos'] / df_rhino['Rhinotest'] * 100
df_rhino['RepWeekDate'] = pd.to_datetime(df_rhino['RepWeekDate'], dayfirst=True)

fig, ax1 = plt.subplots(figsize=(8, 6))
ax1.set_xlabel('Months (2023)')
ax1.set_ylabel('% Positive Tests', color='tab:blue')
ax1.plot(df_rhino['RepWeekDate'], df_rhino['percent_positive'], color='tab:blue')
ax1.tick_params(axis='y', labelcolor='tab:blue')

ax2 = ax1.twinx() 
color = 'tab:red'
ax2.set_ylabel('# Positive Tests', color=color)
ax2.plot(df_rhino['RepWeekDate'], df_rhino['Rhinopos'], color=color)
ax2.tick_params(axis='y', labelcolor=color)

# Adjusting the X-axis to show months only
ax1.xaxis.set_major_locator(mdates.MonthLocator())
ax1.xaxis.set_major_formatter(mdates.DateFormatter('%b'))

fig.tight_layout()
plt.show()
```
