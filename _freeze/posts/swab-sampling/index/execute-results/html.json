{
  "hash": "7e38dfba17b27c00afae98a74123eec8",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Pooled swab sampling for pathogen early detection\nauthor: 'Simon Grimm '\ndate: '2024-02-23'\nformat:\n  html:\n    code-fold: true\nfilters:\n  - black-formatter\ncap-location: bottom\n---\n\n::: {#fd411ee6 .cell execution_count=1}\n``` {.python .cell-code}\n# Importing packages\nimport seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt    \nimport numpy as np\nfrom collections import defaultdict\nimport random\nimport math\n```\n:::\n\n\n# Introduction\n\n\nThe NAO aims to detect stealth pathogens at an early stage. Up until, we have have focused much our research on wastewater treatment plant (WTP) samples. While WTP sampling offers some advantages, its limitations include environmental noise, non-human biological material, and low pathogen abundance. The NAO thus also wants to investigate other sampling approaches. To this end we’ve previously researched the promise of air sampling for pathogen early detection, and Will recently created a framework that allows analysis of various types of sampling strategies. \n\nOne promising approach is sampling using nasal, nasopharyngeal (NP), or oropharyngeal (OP) swabs.  When pooled, these samples have several advantages \n\n* 400x higher RA(1%) than wastewater, atleast based on an initial BOTEC, that I have low confidence in.\n* More metadata on individuals that contributed to the sample (because you can have them provide some basic metadata when providing the sample.\n* Potentially less static complexity than wastewater.\n* If pools are large enough, dynamic complexity could also be lower.\n* There is more existing research on swab sampling than on other sample types.\n\nStill, the approach also has downsides:\n\n* If not sampling at an airport, getting wide geographic coverage is harder.\n* Scaling is more expensive than with wastewater, especially increasing the number of samples provided at at given location.\n* Regulatory hurdles are likely higher than when sampling wastewater. \n\n# Pathogen abundance and detection capability\n\n## Pathogen shedding\n\nAmong many types of pathogens, respiratory pathogens are particularly likely to cause future pandemics (Amesh A. Adalja, MD, Matthew Watson, ...). Though different pathogens have different tropism across tissues (SARS-CoV-2 having a wider wider tropism than influenza (Flerlage et al. 2021)), all of them are respiratory pathogens and thus shed in the respiratory tract, which includes the pharynx, mouth, and nose.\n\nIn a swab sampling program we could use different swabs that target any of these sitesm, i.e., the nostrils, the nasopharynx, oropharynx, and the mid-turbinate region[^1]. These sites differ in their comfort of sampling and (probably) in their sensitivity. For instance, nasopharyngeal swabs (NP swabs) would have be far better than other swabs for us to consider them for a sampling program, given that they do not allow self-sampling.\n\nWe will evaluate the performance of different swab types in three ways:\n\n* **Sensitivity**: Is the pathogen present at all?\n* **Viral load**: How much of the pathogen can be measured? This metric is based on the qPCR cycle threshold of quantiative.\n* **Relative abundance**: When performing untargeted sequencing, what is the relative abundance of a pathogen? \n\n[^1]: The mid-turbinate region is the area between the nasal opening (Nares) and the nasopharynx.\n\n### Sensitivity of different swab types\n(Tsang et al. 2021) performed a meta-analysis to evaluate the ability of different swab types in detecting SARS-CoV-2 using qPCR. Swab types included nasal swabs (n=1622), throat swabs (n=388), and pooled nasal and throat swabs (n=719), each of which were compared to nasopharyngeal swabs. Overall, pooled nasal/throat swabs have the best diagnostic performance with sensitivity of 0.97 (0.93-1.00). \n\n\n| Sample Type                  | Sensitivity    | Specificity    | Positive Predictive Value | Negative Predictive Value |\n|------------------------------|----------------|----------------|---------------------------|---------------------------|\n| Nasal swabs (n=1622)         | 0.86 (0.77-0.93) | 0.99 (0.96-1.00) | 0.96 (0.87-1.00)          | 0.95 (0.88-0.99)          |\n| Throat swabs (n=388)         | 0.68 (0-35-0.94) | 0.97 (0.95-0.99) | 0.75 (0.45-0.96)          | 0.96 (0.94-0.98)          |\n| Pooled nasal/throat swabs (n=719) | 0.97 (0.93-1.00) | 0.99 (0.98-1.00) | 0.97 (0.90-1.00)          | 0.99 (0.98-1.00)          |\n: **Table 1: Comparison of different swab sample types.** Adapted from (Tsang et al. 2021). Values are effect sizes under a random effects-model. The gold standard is nasopharyngeal swabs.\n\nNote, though Tsang et al. 2021 reports specificity, this metric isn’t very useful in this context. All studies covered by the review used qPCR to detect SARS-CoV-2. qPCR is generally considered to be very sensitive and specific. Thus, if a patient tests positive in a throat swab qPCR, but negative in nasopharyngeal swab qPCR, this shouldn’t be counted against throat swabs (false positive), but rather against nasopharyngeal swabs.\n\nThe review above gives us binary information about SARS-CoV-2 being present in different swab types. But we are not merely interested in a pathogen being present in a sample, but how abundant said pathogen is. For instance, hroat swabs coming back negative when NP swabs come back positive tells us that pathogen abundance is likely higher in the nasopharynx, but it’s unclear by how much. \n\nGetting a better understanding of this is particularly relevant when pooling samples because higher relative abundance in an individual positive sample will ensure detection even if said sample is pooled with a large number of negative samples. To quantify this difference in absolute pathogen abundance between sample types we can look beyond positive/negative comparisons and instead look at the differences in CT scores within studies that compared swab types.\n\n\n### Viral load in different swab types\n\n\n#### Nasopharyngeal swabs\nMost studies on swab sampling performance treat nasopharyngeal swabs (NP swabs) as the gold standard, against which, nasal (Kojima et al. 2021; Tu et al. 2020), mid-turbinate (Tu et al. 2020; Muller et al. 2021), and combined nasal/oropharyngeal (Desmet et al. 2021) swabs are compared. NP swabs are commonly administered by a healthcare professional and a properly administered test absorbs material from below the inferior turbinate, and the nasopharynx located at the back of the nasal cavity.\n\nThe CT value difference for paired NP/{Other} swabs are plotted in Figure 1. The CT value of the comparison swab is subtracted from the NP swab CT value. A lower CT is better, thus, a negative cycle threshold (CT) difference equates to a higher pathogen concentration in the NP swab.\n\n::: {#dc8ef8fc .cell execution_count=2}\n``` {.python .cell-code}\n#All CT difference data were calculated in and are taken from https://docs.google.com/spreadsheets/d/1YP4mxT_vxiFwXU5ZuBM4obq_oscfhe05ODWwHFHEznM/\ndf = pd.read_csv('data/np_ct_differences.tsv', sep='\\t', skiprows=1)\ndf.columns = df.columns.str.replace(\", \", \"\\n\")\n\ndf = df.melt(var_name='Study & Comparison', value_name='CT Difference')\n\nfig = plt.figure(figsize=(8, 3.5))\nsns.stripplot(data=df, y='Study & Comparison', x='CT Difference', hue='Study & Comparison', jitter=True)\nplt.legend([],[], frameon=False)\n# drop y axis label\nplt.ylabel('')\nplt.xlabel('qPCR Cycle Threshold Value Difference')\nplt.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\nfor x in 5, 0, -5, -10, -15:\n    if x == 0:\n        plt.axvline(x=x, color='red', linestyle='--', alpha=0.5) \n        continue\n    plt.axvline(x=x, color='grey', linestyle='--', alpha=0.5, linewidth=0.5)\n\nfor y in 0.5, 1.5, 2.5, 3.5, 4.5:\n    plt.axhline(y=y, color='grey', linestyle='--', alpha=0.5, linewidth=0.5)\n\nmin_x, max_x = plt.xlim()\n\nplt.text(max_x/2,-0.6, 'Favors Comparison', fontsize=10, color='black', ha='center')\nplt.text(min_x/2,-0.6, 'Favors NP Swab', fontsize=10, color='black', ha='center')\n\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['left'].set_visible(False)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![**Figure 1: Nasopharyngeal vs Nasal, Mid-Turbinate, and combined Oropharyngeal/ Nasal swabs.** Data from Kojima et al. 2020, Tu et al. 2020, Muller et al. 2021, and Desmet et al. 2021.](index_files/figure-html/cell-3-output-1.png){width=820 height=334}\n:::\n:::\n\n\nApart from self-collected mid-turbinate swabs in Tu et al. 2020, NP swabs show equivalent performance to nasal swabs in Kojima et al. 2020, mid-turbinate swabs in Muller et al. 2021, and combined nasal/throat swabs in Desmet et al 2021; and equivalent performance to nasal swabs in Tu et al. 2020. In the same study, nasal swabs prove equivalent to NP swabs. Combined oro-pharyngeal swabs are also equivalent to NP swabs.\n\nStudies that use NP swabs as their gold standard are useful to better understand the performance of other swab types, but NP swabs themselves are not practical for a large-scale pooled sampling programs: NP swabs are notoriously uncomfortable and are commonly administered by a third person. In contrast, nasal or oropharyngeal swabs would be more suitable for self-sampling, which allows far higher testing throughput. Let’s thus look at studies that compare nasal and oropharyngeal swabs.\n\n### Nasal Swabs\n\nNote that the second plot shows the difference in genome copy numbers, rather than CT values[^2].\n\n[^2]: A 1-log difference in genome copy number is equivalent to a 3.3 CT difference. This is because each cycle in a qPCR machine approxiately equates to doubling of the genome copy number. \n\n::: {#7664cd04 .cell execution_count=3}\n``` {.python .cell-code}\ndf = pd.read_csv('data/nasal_ct_differences.tsv', sep='\\t', skiprows=1)\n\ndf.columns = df.columns.str.replace(\", \", \"\\n\")\n# reshape dataframe to long format\ndf = df.melt(var_name='Study & Comparison', value_name='CT Difference')\n\n\nfig = plt.figure(figsize=(8,1.5))\nsns.stripplot(data=df, y='Study & Comparison', x='CT Difference', hue='Study & Comparison', jitter=True)\nplt.legend([],[], frameon=False)\n# drop y axis label\nplt.ylabel('')\nplt.xlabel('qPCR Cycle Threshold Value Difference')\nplt.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\nfor x in 5, 0, -5, -10, -15:\n    if x == 0:\n        plt.axvline(x=x, color='red', linestyle='--', alpha=0.5) \n        continue\n    plt.axvline(x=x, color='grey', linestyle='--', alpha=0.5, linewidth=0.5)\n\nplt.axhline(y=0.5, color='grey', linestyle='--', alpha=0.5, linewidth=0.5)\n\nmin_x, max_x = plt.xlim()\n\nplt.text(max_x/2,-0.6, 'Favors Comparison', fontsize=10, color='black', ha='center')\nplt.text(min_x/2,-0.6, 'Favors Nasal Swab', fontsize=10, color='black', ha='center')\n\n\n\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['left'].set_visible(False)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![**Figure 2: Nasal swabs vs Oro-pharyngeal and combined nasal/oro-pharyngeal swabs.** All data is taken from Goddall et al. 2022.](index_files/figure-html/cell-4-output-1.png){width=820 height=186}\n:::\n:::\n\n\n::: {#d68b20dd .cell execution_count=4}\n``` {.python .cell-code}\n# All CT difference data was calculated and is taken from https://docs.google.com/spreadsheets/d/1YP4mxT_vxiFwXU5ZuBM4obq_oscfhe05ODWwHFHEznM/\n\n# turn tsv into dataframe. Ignore first row. Second row is column names.\ndf = pd.read_csv('data/leung_genome_copy_differences.tsv', sep='\\t', skiprows=1)\n\n\ndf = df.melt(var_name='Study & Comparison', value_name='Genome Copy Number Difference')\n\ndf['Study & Comparison'] = df['Study & Comparison'].str.split(',').str[-1]\nfig = plt.figure(figsize=(8, 2))\nsns.stripplot(data=df, y='Study & Comparison', x='Genome Copy Number Difference', hue='Study & Comparison', jitter=True)\nplt.legend([],[], frameon=False)\n# drop y axis label\nplt.ylabel('')\nplt.xlabel('Genome Copy Number Difference (Nasal - Throat Swabs), log10 scale')\n# flip x axis\nplt.gca().invert_xaxis()\nplt.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\nfor x in -2, 0, 2, 4, 6:\n    if x == 0:\n        plt.axvline(x=x, color='red', linestyle='--', alpha=0.5) \n        continue\n    plt.axvline(x=x, color='grey', linestyle='--', alpha=0.5, linewidth=0.5)\n\nfor y in 0.5, 1.5:\n    plt.axhline(y=y, color='grey', linestyle='--', alpha=0.5, linewidth=0.5)\n\nmin_x, max_x = plt.xlim()\n\nplt.text(max_x/2,-0.6, 'Favors Throat Swab', fontsize=10, color='black', ha='center')\nplt.text(min_x/2,-0.6, 'Favors Nasal Swab', fontsize=10, color='black', ha='center')\n\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['left'].set_visible(False)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![**Figure 3: Nasal swabs vs Oro-pharyngeal swabs.** All data is taken from Leung et al. 2020.](index_files/figure-html/cell-5-output-1.png){width=760 height=223}\n:::\n:::\n\n\nIn qPCR measurements, nasal swabs contain more virus copies than throat swabs. In (Goodall et al. 2022), nasal swabs are slightly superior to throat swabs and combined/nasal throat swabs, and come out about even when compared to combined nasal/OP swabs. In (Leung et al. 2020), researchers ran multiplex-PCR on both nasal and throat swamples. qPCR differences are plotted in Figure 3 for Human Coronavirus, Influenza, and Rhinovirus.\n\n\n# Virus relative abundance across different swab types\n\nWhatever the sample type, ultimately we will want to perform metagenomic sequencing to detect novel pathogens. As described in a [previous report](https://naobservatory.org/reports/comparing-sampling-strategies-for-early-detection-of-stealth-biothreats/), the value of a metagenomic sequencing sample will can be assessed across several dimensions:\n\n* What is the expected relative abundance of a human-infecting stealth virus?\n* How complex are individual sequencing samples? I.e, what is their species richness and evenness?\n* How much does the background complexity of a sample vary between individuals and over time?\n\n\nThe relative abundance of a target pathogen can be impacted by its microbial background, because the sequencing efficiency of a taxon is directly dependant on the sampling efficiency of the other taxa in the sample[^3]\n\n[^3]: See [McClaren et al. 2019](https://elifesciences.org/articles/46923) for further discussion.\n\nWe identified two studies that performed paired metagenomic sequencing and SARS-CoV-2 qPCR on swab samples Lu et al. 2021, Babiker et al. 2020. We've reached out to the authors of two further studies that didn't have publicly available data.\n\n::: {#b7594e4e .cell execution_count=5}\n``` {.python .cell-code}\ndf_throat = pd.read_csv('data/lu_throat_ct_mgs.tsv', sep='\\t', skiprows=1)\ndf_throat.rename(columns={'SCV-2 Relative Abundance': 'scv2_ra', 'Ct value': 'scv2_ct'}, inplace=True)\ndf_nasopharyngeal = pd.read_csv('data/babiker_np_ct_mgs.tsv', sep='\\t', skiprows=1)\ndf_nasopharyngeal.rename(columns={'SARS-CoV-2 RT-PCR Ct': 'scv2_ct', 'SARS-CoV-2 RA': 'scv2_ra', 'Inpatient/ED vs. Outpatient': 'patient_status'}, inplace=True)\ndf_nasopharyngeal['scv2_ct'] = df_nasopharyngeal['scv2_ct'].replace(',', '.', regex=True).astype(float)\n\nfig, axs= plt.subplots(2, 1, figsize=(9, 6))\nfor i, (ax, df) in enumerate(zip(axs, [df_throat, df_nasopharyngeal])):\n    x_lim = 12.5, 37.5\n    if i == 1:\n        # set dot colors\n        sns_default_colors = sns.color_palette('tab10')\n        sns.scatterplot(ax=ax, data=df, x='scv2_ct', y='scv2_ra', hue='patient_status', style='patient_status',s=100, palette=sns_default_colors[2:4])\n        # set coordinates for legend\n        coordinates = (0.6, -0.2)\n        ax.legend(title='', loc=\"upper left\") # bbox_to_anchor=coordinates)\n        ax.set_xlabel('SARS-CoV-2 qPCR CT Value')\n        ax.set_xlim(x_lim)\n    else:\n        sns.scatterplot(ax=ax, data=df, x='scv2_ct', y='scv2_ra', s=100) \n        ax.set_xlabel('')\n        ax.set_xlim(x_lim)\n    ax.set_yscale('log')\n    ax.invert_xaxis()\n    ax.spines['right'].set_visible(False)\n    ax.spines['top'].set_visible(False)\n    ax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n    ax.set_ylabel('Relative Abundance')\n    for x in np.arange(15, 37.5, 2.5):\n        ax.axvline(x=x, color='grey', linestyle='--', alpha=0.5, linewidth=0.5)\n    for y in range(-7, 1, 1):\n        log_y = 10**y\n        ax.axhline(y=log_y, color='grey', linestyle='--', alpha=0.5, linewidth=0.5)\n```\n\n::: {.cell-output .cell-output-display}\n![**Figure 4: SARS-CoV-2 qPCR CT vs SARS-CoV-2 RA.**\nTop Figure: Throat Swabs. Data from Lu et al. 2021.\nBottom Figure: Nasopharyngeal Swabs. Data from Babiker et al. 2020.](index_files/figure-html/cell-6-output-1.png){width=748 height=503}\n:::\n:::\n\n\nSome observations:\n\n* Though comparing qPCR values between studies is tricky, we do see the expected difference in CT values, where nasopharyngeal swabs have lower CT values.\n* For the same CT value, Lu et al. 2021 returns higher relative abundance.\n* Outpatients in Lu et al. have slightly higher relative abundances for the same CT value.\n\n\n# Simulating detection capability\n\nWe can use the above data to replicate research by Jeff Kaufman. Let's say we get a random set of swabs from a population which contains 1% sick people. On average 1% of all swabs will return positive, and the relative abundance in that positive sample is picked randomly among the relative abundances given in Lu et al. 2021 and Babiker et al. 2020, respectively.\n\nBased on this, the median RA(1%) in a pooled sample with 200 swabs is ~ 10^-4.8 Lu et al. 2021 (throat swabs) and 10^-5.9 in Babiker et al. 2020 (NP swabs) \n\n::: {#3d717191 .cell execution_count=6}\n``` {.python .cell-code}\ndef simulate_detection(positive_ras):\n    FRAC_SICK = 0.01  \n    SIMULATIONS = 10000\n    \n    def probabilistic_round(x):\n        return int(math.floor(x + random.random()))\n    \n    def simulate_once(n_swabs):\n        n_sick = probabilistic_round(FRAC_SICK*n_swabs)\n        if not n_sick:\n            return 0\n        ra = 0\n        for _ in range(n_sick):\n            ra = random.choice(positive_ras) \n        return ra / n_swabs\n    \n    def simulate_many(n_simulations, n_swabs):\n        RAs = []\n        for _ in range(n_simulations):\n            RAs.append(simulate_once(n_swabs))\n        RAs.sort()\n    \n        return [RAs[probabilistic_round(len(RAs)*percentile/100)]\n                for percentile in range(100)]\n    data = defaultdict(list)\n    n_swab_range = [50, 100, 200, 400, 800]\n    for n_swabs in n_swab_range: \n        for percentile, ra in enumerate(simulate_many(SIMULATIONS, n_swabs)):\n            data[percentile].append(ra)\n    df = pd.DataFrame(data).T\n    df.columns = n_swab_range \n\n    return df\ndf_throat = pd.read_csv('data/lu_throat_ct_mgs.tsv', sep='\\t', skiprows=1)\ndf_throat.rename(columns={'SCV-2 Relative Abundance': 'scv2_ra', 'Ct value': 'scv2_ct'}, inplace=True)\n\ndf_nasopharyngeal = pd.read_csv('data/babiker_np_ct_mgs.tsv', sep='\\t', skiprows=1)\ndf_nasopharyngeal.rename(columns={'SARS-CoV-2 RT-PCR Ct': 'scv2_ct', 'SARS-CoV-2 RA': 'scv2_ra', 'Inpatient/ED vs. Outpatient': 'patient_status'}, inplace=True)\ndf_nasopharyngeal['scv2_ct'] = df_throat['scv2_ct'].replace(',', '.', regex=True).astype(float)\n\ndf_throat_ras = df_throat['scv2_ra'].dropna().tolist()\ndf_nasopharyngeal_ras = df_nasopharyngeal['scv2_ra'].dropna().tolist()\nfig, axs = plt.subplots(1, 2, figsize=(9, 5), sharey=True)\nn_swab_range = [50, 100, 200, 400, 800]\nfor i, positive_ras in enumerate([df_throat_ras, df_nasopharyngeal_ras]):\n    df= simulate_detection(positive_ras)\n    for n_swabs in n_swab_range:\n        axs[i].plot(df.index, df[n_swabs], label=f'{n_swabs} swabs')\n    axs[i].set_xlabel('Percentile')\n    axs[i].set_ylabel('RA')\n    axs[i].set_yscale('log')\n    # turn on y tick labels for both plots\n    axs[i].yaxis.set_tick_params(labelleft=True)\n    for x in range (0, 100, 20):\n        axs[i].axvline(x=x, color='black', linestyle='--', linewidth=0.5, alpha=0.5)\n\n    for y in range (-1, -10, -1):\n        log_y = 10**y\n        axs[i].axhline(y=log_y, color='black', linestyle='--', linewidth=0.5, alpha=0.5)\n    if i == 0:\n        axs[i].set_title('Throat')    \n    else:\n        axs[i].set_title('Nasopharyngeal')\n\n    axs[i].spines['right'].set_visible(False)\n    axs[i].spines['top'].set_visible(False)\n    ax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n    if i == 1:\n        axs[i].legend()\n```\n\n::: {.cell-output .cell-output-display}\n![**Figure 5: Simulated detection capability of pooled swab sampling.**\nLeft Figure: Throat Swabs. Data from Lu et al. 2021.\nRight Figure: Nasopharyngeal Swabs. Data from Babiker et al. 2020.](index_files/figure-html/cell-7-output-1.png){width=749 height=449}\n:::\n:::\n\n\n## Next steps\n* Pull in additional qPCR studies.\n* Read into research on comparing CT values across studies and search for standard curves in existing papers.\n* Lay out what you would do if you had standard curves available.\n\nCreate a figure for the remaining viruses not covered in Figure 3.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}