{
  "hash": "9f1e40a8ed66c6bfce9e18f23826a9e2",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Public Health Data\nauthor: 'Simon Grimm '\ndate: '2024-03-12'\ntoc: true\nnocode: true\nformat:\n  html:\n    code-fold: true\ncap-location: bottom\n---\n\n## MADPH\n\n::: {#0f4a4145 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\ndf_adeno = pd.read_csv('data/2024-02-27 NREVSS data request MA June-Dec 2023 - Respiratory Adenovirus.tsv', sep='\\t')\ndf_parainfluenza = pd.read_csv('data/2024-02-27 NREVSS data request MA June-Dec 2023 - Human Parainfluenza.tsv', sep='\\t')\ndf_rhino = pd.read_csv('data/2024-02-27 NREVSS data request MA June-Dec 2023 - Rhinovirus.tsv', sep='\\t')\ndf_covid = pd.read_csv('data/covid-19-dashboard-03-07-24/County data-Table 1.tsv', sep='\\t')\ndf_flu = pd.read_csv('data/flu-dashboard-data-03-07-24/Influenza Lab Tests Reported-Table 1.tsv', sep='\\t')\n```\n:::\n\n\n### COVID-19\n\n## CDC NREVSS\n### Adenovirus\n\n::: {#bcc0b260 .cell execution_count=2}\n``` {.python .cell-code}\ndf = df_adeno[df_adeno['TestType'] == 4]\ndf['percent_positive'] = df['RAdenopos'] / df['RAdenotest'] * 100\ndf['RepWeekDate'] = pd.to_datetime(df['RepWeekDate'], dayfirst=True)\nfig, ax1 = plt.subplots(figsize=(8,6))\nax1.set_xlabel('Months (2023-2024)')\nax1.set_ylabel('% Positive Tests', color='tab:blue')\nax1.plot(df['RepWeekDate'], df['percent_positive'], color='tab:blue')\nax1.tick_params(axis='y', labelcolor='tab:blue')\n\nax2 = ax1.twinx() \ncolor = 'tab:red'\nax2.set_ylabel('# Positive Tests', color=color)\nax2.plot(df['RepWeekDate'], df['RAdenopos'], color=color)\nax2.tick_params(axis='y', labelcolor=color)\n\n# make x axis show months only by turning dates into month strings\nax1.xaxis.set_major_locator(mdates.MonthLocator())\nax1.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n\n\nfig.tight_layout()\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=758 height=566}\n:::\n:::\n\n\n### Parainfluenza\n\n::: {#fcd2c9aa .cell execution_count=3}\n``` {.python .cell-code}\ndf = df_parainfluenza[df_parainfluenza['TestType'] == 4]\ndf[\"PIVpos\"] = df[\"PIV1pos\"] + df[\"PIV2pos\"] + df[\"PIV3pos\"] + df[\"PIV4pos\"]\ndf['percent_positive'] = df['PIVpos'] / df['PIVtest'] * 100\ndf['RepWeekDate'] = pd.to_datetime(df['RepWeekDate'], dayfirst=True)\n\n\nfig, ax1 = plt.subplots(figsize=(8,6))\nax1.set_xlabel('Months (2023-2024)')\nax1.set_ylabel('% Positive Tests', color='tab:blue')\nax1.plot(df['RepWeekDate'], df['percent_positive'], color='tab:blue')\nax1.tick_params(axis='y', labelcolor='tab:blue')\n\nax2 = ax1.twinx() \ncolor = 'tab:red'\nax2.set_ylabel('# Positive Tests', color=color)\nax2.plot(df['RepWeekDate'], df['PIVpos'], color=color)\nax2.tick_params(axis='y', labelcolor=color)\n\n# make x axis show months only by turning dates into month strings\nax1.xaxis.set_major_locator(mdates.MonthLocator())\nax1.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n\n\nfig.tight_layout()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-1.png){width=758 height=566}\n:::\n:::\n\n\n### Rhinovirus\n\n::: {#6933f220 .cell execution_count=4}\n``` {.python .cell-code}\n# Assuming your dataframe is named df_rhino\ndf_rhino['percent_positive'] = df_rhino['Rhinopos'] / df_rhino['Rhinotest'] * 100\ndf_rhino['RepWeekDate'] = pd.to_datetime(df_rhino['RepWeekDate'], dayfirst=True)\n\nfig, ax1 = plt.subplots(figsize=(8, 6))\nax1.set_xlabel('Months (2023)')\nax1.set_ylabel('% Positive Tests', color='tab:blue')\nax1.plot(df_rhino['RepWeekDate'], df_rhino['percent_positive'], color='tab:blue')\nax1.tick_params(axis='y', labelcolor='tab:blue')\n\nax2 = ax1.twinx() \ncolor = 'tab:red'\nax2.set_ylabel('# Positive Tests', color=color)\nax2.plot(df_rhino['RepWeekDate'], df_rhino['Rhinopos'], color=color)\nax2.tick_params(axis='y', labelcolor=color)\n\n# Adjusting the X-axis to show months only\nax1.xaxis.set_major_locator(mdates.MonthLocator())\nax1.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n\nfig.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=758 height=566}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}