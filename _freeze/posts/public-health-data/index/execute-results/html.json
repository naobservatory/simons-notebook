{
  "hash": "1dc0f88e2d24947b28c7298f89239602",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Public Health Data for Project Runway\nauthor: 'Simon Grimm '\ndate: '2024-03-20'\ntoc: true\nnocode: true\nformat:\n  html:\n    code-fold: true\ncap-location: bottom\n---\n\n# Introduction\n\nThis is a summary of the public health data for the state of Massachusetts obtained from the Massachusetts Department of Public Health (MADPH) and the National Respiratory and Enteric Viruses Surveillance System (NREVSS). The MADPH data for both COVID-19 and Influenza looks quite exciting because we see a sharp increase in positive tests and positive test percentages within the Project Runway Coverage Period. Positive tests start to rise at the beginning of November for COVID-19 and at the end of November for Influenza. The data from NREVSS is not as useful because the testing levels are quite a bit lower (positive tests for Flu and Covid reach a maximum of ~4250 and ~6000 respectively, while the most common NREVSS pathogen, Rhinovirus, caps out at ~130.)\n\n# The Data\n\nFrom MADPH, we have data on COVID-19 (positive tests and positive test percentage) and on Influenza (positive tests). The data ranges from July 2023 to the end of February 2024.\n\nFrom NREVSS, we have data on Parainfluenza, Rhinovirus, Enteric Adenovirus, Respiratory Adenovirus, Metapneumovirus, and Seasonal Coronavirus. However, the data for Enteric Adenovirus, Seasonal Coronavirus, and Metapneumovirus is not usable. Enteric Adenovirus shows 0 positive tests across the entire sampling period, Metapneumovirus shows a maximum of 6 positive tests per week (~2% positive test percentage), and Seasonal Coronavirus only gives a maximum of 4 positive tests per week, with no information on the total number of tests performed.\n\n:::{.column-body-outset}\n| Pathogen | Source | Date Begin | Date End | Data Type |Spatial Resolution| Plotted |\n|---|---|---------------|----------------|-----------------|--------------------|----|\n| Human Parainfluenza  | [Gsheets](https://docs.google.com/spreadsheets/d/164pRmoySKWY9pkto-jhJo7w9sN51OPJq_gtkG3DuyaU/edit?usp=sharing) | 3-6-2023 | 30-12-2023  | PosTest + PosPerc | State | Yes |  |\n| Enteric Adenovirus| [GSheets](https://docs.google.com/spreadsheets/d/164pRmoySKWY9pkto-jhJo7w9sN51OPJq_gtkG3DuyaU/edit?usp=sharing) | 3-6-2023 | 30-12-2023  | PosTest + PosPerc | State | No |  |\n| Respiratory Adenovirus  | [GSheets](https://docs.google.com/spreadsheets/d/164pRmoySKWY9pkto-jhJo7w9sN51OPJq_gtkG3DuyaU/edit?usp=sharing) | 3-6-2023 | 30-12-2023  | PosTest + PosPerc | State | Yes |\n| Human Metapneumovirus| [GSheets](https://docs.google.com/spreadsheets/d/164pRmoySKWY9pkto-jhJo7w9sN51OPJq_gtkG3DuyaU/edit?usp=sharing) | 3-6-2023 | 30-12-2023  | PosTest + PosPerc | State | No  |\n| Seasonal Coronavirus | [GSheets](https://docs.google.com/spreadsheets/d/164pRmoySKWY9pkto-jhJo7w9sN51OPJq_gtkG3DuyaU/edit?usp=sharing) | 3-6-2023 | 30-12-2023  | PosTest + PosPerc | State | No | \n| Rhinovirus  | [GSheets](https://docs.google.com/spreadsheets/d/164pRmoySKWY9pkto-jhJo7w9sN51OPJq_gtkG3DuyaU/edit?usp=sharing) | 3-6-2023 | 30-12-2023  | PosTest + PosPerc | State | Yes |\n| COVID-19 | [Mass.gov](https://www.mass.gov/info-details/covid-19-reporting)| 3-7-2024 | 2-11-2024| PosTest + PosPerc | County | Yes  |\n| Influenza| [Mass.gov](https://www.mass.gov/info-details/influenza-reporting)  | 3-7-2024 | 2-11-2024| PosTest | State | Yes |\n\n:::\n\n# MADPH\nThe COVID-19 data provided by MADPH has county-level, weekly resolution. This allows us to look at testing data matching the Deer Island catchment area.\n\n![MWRA Coverage](images/mwra_coverage.png)\n\nThis area approximately matches Suffolk county and overlaps with Norfolk, and Middlesex.\n\n![MA Counties](images/ma_county_map.png)\n\n::: {#29bfcb4a .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nfrom matplotlib.lines import Line2D\ndf_adeno = pd.read_csv('data/2024-02-27 NREVSS data request MA June-Dec 2023 - Respiratory Adenovirus.tsv', sep='\\t')\ndf_parainfluenza = pd.read_csv('data/2024-02-27 NREVSS data request MA June-Dec 2023 - Human Parainfluenza.tsv', sep='\\t')\ndf_rhino = pd.read_csv('data/2024-02-27 NREVSS data request MA June-Dec 2023 - Rhinovirus.tsv', sep='\\t')\ndf_covid = pd.read_csv('data/covid-19-dashboard-03-07-24/County data-Table 1.tsv', sep='\\t')\ndf_flu = pd.read_csv('data/flu-dashboard-data-03-07-24/Influenza Lab Tests Reported-Table 1.tsv', sep='\\t')\n```\n:::\n\n\n## COVID-19\n\nThe plot below shows data both for the entire state and the counties covered by Deer Island (Suffolk, Norfolk, Middlesex). COVID-19 cases see a decrease until the beginning of November and a sharp increase and peak over the rest of the Project Runway coverage period.\n\n::: {#ab76cf3c .cell execution_count=2}\n``` {.python .cell-code}\nfig, ax1 = plt.subplots(figsize=(8, 6))\n\ndf = df_covid[df_covid['County'].isin(['Suffolk', 'Norfolk', 'Middlesex'])]\ndf[\"date\"] = pd.to_datetime(df[\"Week Start Date\"], format='%m/%d/%y')\n\n\ndf[\"pos_agg\"] = df[\"Positive tests the week\"].groupby(df[\"date\"]).transform('sum')\ndf[\"percent_positive_agg\"] = df[\"pos_agg\"] / df.groupby(\"date\")[\"Tests during the week\"].transform('sum') * 100\n\nax1.set_xlabel('Months (2023-2024)')\nax1.set_ylabel('Positive Percentage')\nax1.plot(df[\"date\"], df[\"percent_positive_agg\"], color='tab:blue', linestyle='--', label='Counties (% Positive)')\nax1.tick_params(axis='y')\n\nax2 = ax1.twinx()\nax2.set_ylabel('Positive Tests per Week')\nax2.plot(df[\"date\"], df[\"pos_agg\"], color='tab:blue', linestyle='-', label='Counties (# Positive)')\nax2.tick_params(axis='y')\n\ndf_ma = df_covid[df_covid['County'] == 'Statewide (all of MA)']\ndf_ma[\"date\"] = pd.to_datetime(df_ma[\"Week Start Date\"], format='%m/%d/%y')\ndf_ma[\"Week percent positivity\"] = df_ma[\"Week percent positivity\"].astype(float)\ndf_ma[\"percent positive\"] = df_ma[\"Week percent positivity\"] * 100\n\nax1.plot(df_ma[\"date\"], df_ma[\"percent positive\"], color='tab:red', linestyle='--', label='MA (% Positive)')\nax2.plot(df_ma[\"date\"], df_ma[\"Positive tests the week\"], color='tab:red', linestyle='-', label='MA (# Positive)')\n\nax1.xaxis.set_major_locator(mdates.MonthLocator())\nax1.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n\nax1_yminlim, ax1_ymaxlim = ax1.get_ylim()\nax1.set_ylim(0, ax1_ymaxlim)\n\nax2_yminlim, ax2_ymaxlim = ax2.get_ylim()\nax2.set_ylim(0, ax2_ymaxlim)\n\nax1.axvspan(pd.to_datetime('2023-10-01'), pd.to_datetime('2023-12-31'), color='lightgrey', alpha=0.5)\nax1.text(pd.to_datetime('2023-11-15'), ax1_ymaxlim * 1.02, 'Project Runway Sampling', fontsize=12, ha='center')\n\nfor y in range(0, int(ax1_ymaxlim) + 1, 2):\n    ax1.axhline(y, color='black', linestyle='-', lw=0.2)\n\nax2.tick_params(axis='y', right=False, left=False)\n\n\nlegend_elements = [Line2D([0], [0], color= 'black',  linestyle='-', label='Positive Tests'),\n                   Line2D([0], [0], color= 'black', linestyle='--', label='Percentage Positivity'),\n                   Line2D([0], [0], color= 'tab:red', linestyle='-', label='Massachusetts'),\n                   Line2D([0], [0], color= 'tab:blue', linestyle='-', label='Suffolk, Norfolk, Middlesex')] \n                  \n\nax1.legend(handles=legend_elements, loc='upper left')\n\nfig.tight_layout()\nplt.show()\nfig.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=758 height=567}\n:::\n:::\n\n\n## Influenza\nWe do not have Percentage Positivity data for Influenza. Still, based on the number of positive tests the Influenza season started during the PR coverage period.\n\n::: {#f197a4ea .cell execution_count=3}\n``` {.python .cell-code}\ndf_flu['date'] = pd.to_datetime(df_flu['Week Start Date'], format='%m/%d/%y')\ndf_flu['pos_tests_across_fly_types'] = df_flu.groupby('date')['Positive lab tests'].transform('sum') \ndf = df_flu\nfig, ax = plt.subplots(figsize=(8,6))\nax.set_xlabel('Months (2023-2024)')\nax.set_ylabel('Positive Tests per Week')\nax.plot(df['date'], df['pos_tests_across_fly_types'], color='tab:blue', linestyle='-', label='Positive Tests')\nax.xaxis.set_major_locator(mdates.MonthLocator())\nax.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n\nax_yminlim, ax_ymaxlim = ax.get_ylim()\nax.set_ylim(0, ax_ymaxlim)\n\nfor y in range(0, int(ax_ymaxlim) + 1, 1000):\n    ax.axhline(y, color='black', linestyle='-', lw=0.2)\n\nax.axvspan(pd.to_datetime('2023-10-01'), pd.to_datetime('2023-12-31'), color='lightgrey', alpha=0.5)\nax.text(pd.to_datetime('2023-11-15'), ax_ymaxlim * 1.02, 'Project Runway Sampling', fontsize=12, ha='center')\n\nfig.tight_layout()\nplt.show()\nfig.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-1.png){width=758 height=567}\n:::\n:::\n\n\n# CDC NREVSS\nDue to the lower number of tests, the data from NREVSS is a lot less useful. It might still be interesting to check if Rhinovirus relative abundance drops from October to end of December, as we see a decline in Rhinovirus tests and positive percentage rates during that time.\n\n## Respiratory Adenovirus\n\n::: {#54737844 .cell execution_count=4}\n``` {.python .cell-code}\ndf = df_adeno[df_adeno['TestType'] == 4]\ndf['percent_positive'] = df['RAdenopos'] / df['RAdenotest'] * 100\ndf['RepWeekDate'] = pd.to_datetime(df['RepWeekDate'], dayfirst=True)\nfig, ax1 = plt.subplots(figsize=(8,6))\nax1.set_xlabel('Months (2023-2024)')\nax1.set_ylabel('Positive Percentage', color='tab:blue')\nax1.plot(df['RepWeekDate'], df['percent_positive'], color='tab:blue')\nax1.tick_params(axis='y', labelcolor='tab:blue')\n\nax2 = ax1.twinx() \ncolor = 'tab:red'\nax2.set_ylabel('Positive Tests per Week', color=color)\nax2.plot(df['RepWeekDate'], df['RAdenopos'], color=color)\nax2.tick_params(axis='y', labelcolor=color)\n\n\nax1.xaxis.set_major_locator(mdates.MonthLocator())\nax1.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n\nax1_yminlim, ax1_ymaxlim = ax1.get_ylim()\nfor y in range(0, int(ax1_ymaxlim) + 1, 2):\n    ax1.axhline(y, color='black', linestyle='-', lw=0.2)\n\nax1.axvspan(pd.to_datetime('2023-10-01'), pd.to_datetime('2023-12-31'), color='lightgrey', alpha=0.5)\nax1.text(pd.to_datetime('2023-11-15'), ax1_ymaxlim * 1.02, 'Project Runway Sampling', fontsize=12, ha='center')\n\nfig.tight_layout()\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=758 height=567}\n:::\n:::\n\n\n## Parainfluenza\n\n::: {#b8ec61f1 .cell execution_count=5}\n``` {.python .cell-code}\ndf = df_parainfluenza[df_parainfluenza['TestType'] == 4]\ndf[\"PIVpos\"] = df[\"PIV1pos\"] + df[\"PIV2pos\"] + df[\"PIV3pos\"] + df[\"PIV4pos\"]\ndf['percent_positive'] = df['PIVpos'] / df['PIVtest'] * 100\ndf['RepWeekDate'] = pd.to_datetime(df['RepWeekDate'], dayfirst=True)\n\nfig, ax1 = plt.subplots(figsize=(8,6))\nax1.set_xlabel('Months (2023-2024)')\nax1.set_ylabel('Positive Percentage', color='tab:blue')\nax1.plot(df['RepWeekDate'], df['percent_positive'], color='tab:blue')\nax1.tick_params(axis='y', labelcolor='tab:blue')\n\nax2 = ax1.twinx() \ncolor = 'tab:red'\nax2.set_ylabel('Positive Tests per Week', color=color)\nax2.plot(df['RepWeekDate'], df['PIVpos'], color=color)\nax2.tick_params(axis='y', labelcolor=color)\n\n\nax1.xaxis.set_major_locator(mdates.MonthLocator())\nax1.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n\nax1_yminlim, ax1_ymaxlim = ax1.get_ylim()\nfor y in range(0, int(ax1_ymaxlim) + 1, 2):\n    ax1.axhline(y, color='black', linestyle='-', lw=0.2)\n\nax1.axvspan(pd.to_datetime('2023-10-01'), pd.to_datetime('2023-12-31'), color='lightgrey', alpha=0.5)\nax1.text(pd.to_datetime('2023-11-15'), ax1_ymaxlim * 1.02, 'Project Runway Sampling', fontsize=12, ha='center')\n\n\n\n\nfig.tight_layout()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){width=758 height=567}\n:::\n:::\n\n\n## Rhinovirus\n\n::: {#1482ed08 .cell execution_count=6}\n``` {.python .cell-code}\ndf_rhino['percent_positive'] = df_rhino['Rhinopos'] / df_rhino['Rhinotest'] * 100\ndf_rhino['RepWeekDate'] = pd.to_datetime(df_rhino['RepWeekDate'], dayfirst=True)\n\nfig, ax1 = plt.subplots(figsize=(8, 6))\nax1.set_xlabel('Months (2023)')\nax1.set_ylabel('Positive Percentage', color='tab:blue')\nax1.plot(df_rhino['RepWeekDate'], df_rhino['percent_positive'], color='tab:blue')\nax1.tick_params(axis='y', labelcolor='tab:blue')\n\nax2 = ax1.twinx() \ncolor = 'tab:red'\nax2.set_ylabel('Positive Tests per Week', color=color)\nax2.plot(df_rhino['RepWeekDate'], df_rhino['Rhinopos'], color=color)\nax2.tick_params(axis='y', labelcolor=color)\n\nax1.xaxis.set_major_locator(mdates.MonthLocator())\nax1.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n\nax1_yminlim, ax1_ymaxlim = ax1.get_ylim()\nfor y in range(0, int(ax1_ymaxlim) + 1, 5):\n    ax1.axhline(y, color='black', linestyle='-', lw=0.2)\n\nax1.axvspan(pd.to_datetime('2023-10-01'), pd.to_datetime('2023-12-31'), color='lightgrey', alpha=0.5)\nax1.text(pd.to_datetime('2023-11-15'), ax1_ymaxlim * 1.05, 'Project Runway Sampling', fontsize=12, ha='center')\n\n\n\nfig.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=758 height=568}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}